public class Cubo {

    // Constantes
    public static final double LITROS_LATA = 18.0;
    public static final double PRECO_TIPO1 = 101.90;
    public static final double PRECO_TIPO2 = 212.45;
    public static final double PRECO_TIPO3 = 345.56;

    // Atributos
    private double lado;
    private double rendimento; // m² por litro
    private int tipoTinta;

    // Construtores
    public Cubo(double lado, double rendimento, int tipoTinta) {
        setLado(lado);
        setRendimento(rendimento);
        setTipoTinta(tipoTinta);
    }

    // Getters e Setters com validações
    public double getLado() {
        return lado;
    }

    public void setLado(double lado) {
        if (lado <= 0) throw new IllegalArgumentException("Lado deve ser positivo!");
        this.lado = lado;
    }

    public double getRendimento() {
        return rendimento;
    }

    public void setRendimento(double rendimento) {
        if (rendimento <= 0) throw new IllegalArgumentException("Rendimento deve ser positivo!");
        this.rendimento = rendimento;
    }

    public int getTipoTinta() {
        return tipoTinta;
    }

    public void setTipoTinta(int tipoTinta) {
        if (tipoTinta < 1 || tipoTinta > 3) throw new IllegalArgumentException("Tipo de tinta inválido!");
        this.tipoTinta = tipoTinta;
    }

    // Métodos de cálculo
    public double calcularAreaBase() {
        return lado * lado;
    }

    public double calcularAreaTotal() {
        return 6 * calcularAreaBase();
    }

    public double calcularVolume() {
        return Math.pow(lado, 3);
    }

    public double calcularDiagonal() {
        return lado * Math.sqrt(3);
    }

    public double calcularLitrosTinta() {
        return calcularAreaTotal() / rendimento;
    }

    public int calcularLatasTinta() {
        return (int) Math.ceil(calcularLitrosTinta() / LITROS_LATA);
    }

    public double calcularPrecoLata() {
        switch (tipoTinta) {
            case 1: return PRECO_TIPO1;
            case 2: return PRECO_TIPO2;
            case 3: return PRECO_TIPO3;
            default: return 0;
        }
    }

    public double calcularValorTotal() {
        return calcularLatasTinta() * calcularPrecoLata();
    }

    // toString para saída formatada
    @Override
    public String toString() {
        return "a: " + lado +
                "\nRendimento: " + rendimento +
                "\nTipo de Tinta: " + tipoTinta +
                "\n\nÁrea da Base: " + calcularAreaBase() +
                "\nÁrea Total: " + calcularAreaTotal() +
                "\nVolume: " + calcularVolume() +
                "\nDiagonal do Cubo: " + calcularDiagonal() +
                "\nLitros de Tinta: " + calcularLitrosTinta() +
                "\nLatas de Tinta: " + calcularLatasTinta() +
                "\nValor Total: " + calcularValorTotal();
    }
}
